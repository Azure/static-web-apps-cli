# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Azure SDK copy package to drop

on: workflow_dispatch

jobs:
#  test:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macos-latest, windows-latest, ubuntu-18.04]
#        node-version: [10.x, 12.x, 14.x]
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Use Node.js ${{ matrix.node-version }}
#      uses: actions/setup-node@v1
#      with:
#        node-version: ${{ matrix.node-version }}
#    - run: npm ci
#    - run: npm test

  packageAndRelease:
#    needs: [test]
    name: Package and recreate draft release
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - run: npm ci
      - run: npm run build
      - run: npm pack

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
            name: package
            path: "*.tgz"

      - run: echo "NPM_PACKAGE_VERSION=$(jq -r ".version" package.json)" >> $GITHUB_ENV
      - run: echo "NPM_PACKAGE_PATH=$(ls *.tgz)" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: refs/tags/v${{ env.NPM_PACKAGE_VERSION }},
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NPM_PACKAGE_VERSION }}
          release_name: v${{ env.NPM_PACKAGE_VERSION }}
          draft: true
          prerelease: true

      - name: Upload Release Asset
        id: upload_release_asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.NPM_PACKAGE_PATH }}
          asset_name: ${{ env.NPM_PACKAGE_PATH }}
          asset_content_type: application/tar+gzip
  # copy:
  #   name: "Copy to Azure SDK Partner Pipeline Drop"
  #   needs: [ package ]
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - name: Upload
  #     uses: actions/download-artifact@v2
  #     with:
  #         name: package
  #   - run: |
  #       ls -la
  #       PACKAGE_VERSION=`echo $(ls *.tgz) | sed -e 's/\.tgz$//'`
  #       echo $PACKAGE_VERSION
  #       az storage blob upload -n azure-staticwebapps/npm/$PACKAGE_VERSION/$(ls *.tgz) -c drops -f $(ls *.tgz) --account-name $AZURE_SDK_STORAGE_ACCOUNT_NAME --account-key $AZURE_SDK_DROP_ACCESS_KEY
  #     env:
  #       AZURE_SDK_STORAGE_ACCOUNT_NAME: ${{secrets.AZURE_SDK_STORAGE_ACCOUNT_NAME}}
  #       AZURE_SDK_DROP_ACCESS_KEY: ${{secrets.AZURE_SDK_DROP_ACCESS_KEY}}
