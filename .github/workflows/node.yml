# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        node-version: [12.x, 13.x, 14.x, 15.x, 16.x, 17.x]

    name: "test: use node ${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ matrix.os }}-${{ matrix.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: "npm test"
        run: |
          npm ci
          npm test

  e2e-deploy-macos:
    needs: [test-macos]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        node-version: [12.x, 13.x, 14.x, 15.x, 16.x, 17.x]

    name: "e2e: deploy with node ${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ matrix.os }}-${{ matrix.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: "swa deploy"
        run: |
          npm ci
          cd cypress/fixtures/
          node ../../dist/cli/bin.js deploy --dry-run --verbose=silly --api-location=./api --output-location=./static --deployment-token=123

  test-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        node-version: [12.x, 13.x, 14.x, 15.x, 16.x, 17.x]

    name: "test: use node ${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ matrix.os }}-${{ matrix.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: "npm test"
        run: |
          npm ci
          npm test -- --maxWorkers=1

  e2e-deploy-windows:
    needs: [test-windows]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        node-version: [12.x, 13.x, 14.x, 15.x, 16.x, 17.x]

    name: "e2e: deploy with node ${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ matrix.os }}-${{ matrix.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: "swa deploy"
        run: |
          npm ci
          cd cypress/fixtures/
          node ../../dist/cli/bin.js deploy --dry-run --verbose=silly --api-location=./api --output-location=./static --deployment-token=123

  test-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node-version: [12.x, 13.x, 14.x, 15.x, 16.x, 17.x]

    name: "test: use node ${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ matrix.os }}-${{ matrix.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: "npm test"
        run: |
          npm ci
          npm test

  e2e-deploy-linux:
    needs: [test-linux]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node-version: [12.x, 13.x, 14.x, 15.x, 16.x, 17.x]

    name: "e2e: deploy with node ${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-${{ matrix.os }}-${{ matrix.node-version }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: "swa deploy"
        run: |
          npm ci
          cd cypress/fixtures/
          node ../../dist/cli/bin.js deploy --dry-run --verbose=silly --api-location=./api --output-location=./static --deployment-token=123

  # TODO: Cypress setup is failing on CI. Investigate.
  # e2e:
  #   needs: [test-macos, test-windows, test-linux]
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       os: [macos-latest, windows-latest, ubuntu-20.04]
  #       node-version: [14.x]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v2
  #       with:
  #         record: false
  #         start: npm run e2e:static
  #         browser: chrome
  #         headless: true
  #         wait-on: "http://0.0.0.0:1234, http://localhost:7071"
  #         wait-on-timeout: 120
  #       env:
  #         DEBUG: "cypress:*"

  #     - uses: actions/upload-artifact@v1
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: cypress/screenshots

  package:
    needs: [e2e-deploy-macos, e2e-deploy-windows, e2e-deploy-linux]
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - run: npm ci
      - run: npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
      - run: npm pack
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: static-web-apps-cli
          path: "*.tgz"
