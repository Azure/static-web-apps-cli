name: Dev Deploy

on:
  push:
    branches: [ 'dev' ]

jobs:
  push_to_registry:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          slatedocs/slate
        tags: |
          type=ref,event=branch

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_KEY }}

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/ppc64le
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy_gh:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    env:
      ruby-version: 2.6

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.ruby-version }}

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-${{ runner.os }}-${{ env.ruby-version }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          gems-${{ runner.os }}-${{ env.ruby-version }}-
          gems-${{ runner.os }}-
    - run: bundle config set deployment 'true'
    - name: bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - run: bundle exec middleman build

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3.7.0-8
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        destination_dir: dev
        publish_dir: ./build
        keep_files: true
